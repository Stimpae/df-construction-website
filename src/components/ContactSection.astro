<section id="contact" class="py-20 bg-secondary">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Centered header -->
    <div class="text-center mb-12">
      <!-- Header with horizontal line -->
      <div class="flex items-center justify-center mb-2 md:mb-3 lg:mb-8">
        <div class="w-6 h-[0.5px] bg-white/70 mr-4"></div>
        <p class="text-white text-sm uppercase tracking-wider">CONTACT US</p>
        <div class="w-6 h-[0.5px] bg-white/70 ml-4"></div>
      </div>
      <h2 class="max-w-1xl mx-auto text-4xl md:text-5xl font-heading font-bold text-white leading-tight mb-4">
        Ready to get started?<br/>Get a quote today
      </h2>
    </div>
    
    <!-- Toggle buttons -->
    <div class="flex flex-col md:flex-row justify-center gap-4 mb-10">
      <button 
        id="quote-toggle" 
        class="px-6 py-4 bg-primary text-white text-center rounded-full font-medium hover:bg-primary-light transition-colors duration-200 flex items-center justify-center"
      >
        Get a quote
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 ml-2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </button>
      
      <button 
        id="contact-toggle" 
        class="px-6 py-4 bg-white text-primary border border-primary text-center rounded-full font-medium hover:bg-gray-100 transition-colors duration-200"
      >
        Contact us
      </button>
    </div>
    
    <!-- Forms container -->
    <div id="forms-container">
      <!-- Quote Form (hidden by default) -->
      <div id="quote-form" class="p-8 max-w-3xl mx-auto hidden">
        <h3 class="text-2xl font-bold text-white mb-6">Request a Quote</h3>
        
        <form class="space-y-4" novalidate>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-8">
            <div>
              <label for="name" class="px-2 block text-white text-sm font-medium mb-2">Name*</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="John Carter"
              />
            </div>
            
            <div>
              <label for="email" class="px-2 block text-white text-sm font-medium mb-2">Email address*</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="example@youremail.com"
              />
            </div>
            
            <div>
              <label for="phone" class="px-2 block text-white text-sm font-medium mb-2">Phone number*</label>
              <input 
                type="tel" 
                id="phone" 
                name="phone"
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="07123 456789"
              />
            </div>
            
            <div>
              <label for="location" class="px-2 block text-white text-sm font-medium mb-2">Location*</label>
              <input 
                type="text" 
                id="location" 
                name="location"
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="ex. Bristol, UK"
              />
            </div>
            
            <div>
              <label for="company" class="px-2 block text-white text-sm font-medium mb-2">Company</label>
              <input 
                type="text" 
                id="company" 
                name="company"
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="ex. Facebook"
              />
            </div>
            
            <div>
              <label for="service" class="px-2 block text-white text-sm font-medium mb-2">Service</label>
              <input 
                type="text" 
                id="service" 
                name="service"
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="ex. General construction"
              />
            </div>
            
          </div>

          <div class="mt-8">
            <label for="message" class="px-2 block text-white text-sm font-medium mb-2">Message*</label>
            <textarea 
              id="message" 
              name="message" 
              rows="4"
              required
              class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white resize-none"
              placeholder="How can we help you?"
            ></textarea>
          </div>
          
          <div class="mt-8">
            <button 
              type="submit"
              class="w-full py-4 bg-primary text-white font-medium rounded-full hover:bg-primary-light transition-colors duration-200"
            >
              Submit Quote Request
            </button>
          </div>
          
          <p class="text-white text-xs text-center mt-2">* Required fields</p>
        </form>
      </div>
      
      <!-- Contact Form (hidden by default) -->
      <div id="contact-form" class="p-8 max-w-3xl mx-auto hidden">
        <h3 class="text-2xl font-bold text-white mb-6">Get in Touch</h3>
        
        <form class="space-y-4" novalidate>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-8">
            <div>
              <label for="contact-name" class="px-2 block text-white text-sm font-medium mb-2">Name*</label>
              <input 
                type="text" 
                id="contact-name" 
                name="contact-name" 
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="John Carter"
              />
            </div>
            
            <div>
              <label for="contact-email" class="px-2 block text-white text-sm font-medium mb-2">Email*</label>
              <input 
                type="email" 
                id="contact-email" 
                name="contact-email" 
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="example@youremail.com"
              />
            </div>
            
            <div>
              <label for="contact-phone" class="px-2 block text-white text-sm font-medium mb-2">Phone number*</label>
              <input 
                type="tel" 
                id="contact-phone" 
                name="contact-phone"
                required
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="07123 456789"
              />
            </div>
            
            <div>
              <label for="subject" class="px-2 block text-white text-sm font-medium mb-2">Subject</label>
              <input 
                type="text" 
                id="subject" 
                name="subject"
                class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white"
                placeholder="What is this regarding?"
              />
            </div>
          </div>
          
          <div class="mt-8">
            <label for="message" class="px-2 block text-white text-sm font-medium mb-2">Message*</label>
            <textarea 
              id="message" 
              name="message" 
              rows="4"
              required
              class="w-full px-2 py-2 bg-transparent border-b-white border-y-transparent border-x-transparent text-white placeholder-white/70 focus:outline-none focus:border-white resize-none"
              placeholder="How can we help you?"
            ></textarea>
          </div>
          
          <div class="mt-8">
            <button 
              type="submit"
              class="w-full py-4 bg-primary text-white font-medium rounded-full hover:bg-primary-light transition-colors duration-200"
            >
              Send Message
            </button>
          </div>
          
          <p class="text-white text-xs text-center mt-2">* Required fields</p>
        </form>
      </div>
    </div>
  </div>

</section>

<script>
  // Form toggle functionality
  document.addEventListener('DOMContentLoaded', () => {
    const quoteToggle = document.getElementById('quote-toggle');
    const contactToggle = document.getElementById('contact-toggle');
    const quoteForm = document.getElementById('quote-form');
    const contactForm = document.getElementById('contact-form');
    
    if (quoteToggle && contactToggle && quoteForm && contactForm) {
      // Quote button click handler
      quoteToggle.addEventListener('click', () => {
        // Check if quote form is already visible
        const isQuoteVisible = !quoteForm.classList.contains('hidden');
        
        // Hide both forms first
        quoteForm.classList.add('hidden');
        contactForm.classList.add('hidden');
  
        // If quote form wasn't visible, show it and highlight the button
        if (!isQuoteVisible) {
          quoteForm.classList.remove('hidden');
        }
      });
      
      // Contact button click handler
      contactToggle.addEventListener('click', () => {
        // Check if contact form is already visible
        const isContactVisible = !contactForm.classList.contains('hidden');
        
        // Hide both forms first
        quoteForm.classList.add('hidden');
        contactForm.classList.add('hidden');
        
        // If contact form wasn't visible, show it and highlight the button
        if (!isContactVisible) {
          contactForm.classList.remove('hidden');
        }
      });
    }
  });

  // Form validation
  document.addEventListener('DOMContentLoaded', () => {
    // Get form elements
    const quoteForm = document.getElementById('quote-form')?.querySelector('form');
    const contactForm = document.getElementById('contact-form')?.querySelector('form');
    
    // Phone number validation pattern (allows formats like: (123) 456-7890, 123-456-7890, 1234567890)
    const phonePattern = /^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/;
    
    // Add validation to Quote Form
    if (quoteForm) {
      const phoneInput = quoteForm.querySelector('#phone');
      
      // Add input validation for phone field
      if (phoneInput) {
        phoneInput.addEventListener('input', (e) => {
          validatePhoneNumber(e.target);
        });
      }
      
      // Form submission handler
      quoteForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        // Get all required inputs
        const requiredInputs = quoteForm.querySelectorAll('[required]');
        let isValid = true;
        
        // Check all required fields
        requiredInputs.forEach(input => {
          if (!input.value.trim()) {
            markInvalid(input, 'This field is required');
            isValid = false;
          } else {
            markValid(input);
          }
        });
        
        // Check phone number format if provided
        if (phoneInput && phoneInput.value.trim() && !phonePattern.test(phoneInput.value)) {
          markInvalid(phoneInput, 'Please enter a valid phone number');
          isValid = false;
        }
        
        // If form is valid, submit it
        if (isValid) {
          // You can submit the form here or send data via AJAX
          console.log('Quote form is valid, submitting...');
          // quoteForm.submit(); // Uncomment to enable actual submission
          
          // Show success message
          showSuccessMessage(quoteForm, 'Your quote request has been submitted. We\'ll be in touch soon!');
        }
      });
    }
    
    // Add validation to Contact Form
    if (contactForm) {
      // Form submission handler
      contactForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        // Get all required inputs
        const requiredInputs = contactForm.querySelectorAll('[required]');
        let isValid = true;
        
        // Check all required fields
        requiredInputs.forEach(input => {
          if (!input.value.trim()) {
            markInvalid(input, 'This field is required');
            isValid = false;
          } else {
            markValid(input);
          }
        });
        
        // Validate email format
        const emailInput = contactForm.querySelector('#contact-email');
        if (emailInput && !validateEmail(emailInput.value)) {
          markInvalid(emailInput, 'Please enter a valid email address');
          isValid = false;
        }
        
        // If form is valid, submit it
        if (isValid) {
          // You can submit the form here or send data via AJAX
          console.log('Contact form is valid, submitting...');
          // contactForm.submit(); // Uncomment to enable actual submission
          
          // Show success message
          showSuccessMessage(contactForm, 'Your message has been sent. We\'ll respond as soon as possible!');
        }
      });
    }
    
    // Helper functions
    function validatePhoneNumber(input) {
      if (input.value.trim() === '') return; // Skip empty field
      
      if (!phonePattern.test(input.value)) {
        markInvalid(input, 'Please enter a valid phone number');
      } else {
        markValid(input);
      }
    }
    
    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(String(email).toLowerCase());
    }
    
    function markInvalid(input, message) {
      // Add error class to input
      input.classList.add('border-red-500');
      input.classList.remove('border-white');
      
      // Create or update error message
      let errorElement = input.parentElement.querySelector('.error-message');
      if (!errorElement) {
        errorElement = document.createElement('div');
        errorElement.className = 'error-message text-red-200 text-xs mt-1';
        input.parentElement.appendChild(errorElement);
      }
      errorElement.textContent = message;
    }
    
    function markValid(input) {
      // Remove error class
      input.classList.remove('border-red-500');
      input.classList.add('border-white');
      
      // Remove error message if exists
      const errorElement = input.parentElement.querySelector('.error-message');
      if (errorElement) {
        errorElement.remove();
      }
    }
    
    function showSuccessMessage(form, message) {
      // Hide the form
      const formElements = form.querySelectorAll('input, textarea, select, button, p');
      formElements.forEach(el => el.style.display = 'none');
      
      // Create success message
      const successDiv = document.createElement('div');
      successDiv.className = 'bg-green-600/20 border border-green-200 text-white p-6 rounded-md text-center';
      successDiv.innerHTML = `
        <div class="text-4xl mb-4">✓</div>
        <p class="text-xl mb-4">${message}</p>
        <button type="button" class="mt-4 px-6 py-3 bg-white text-primary font-medium rounded-full hover:bg-gray-100 transition-colors duration-200">
          Close
        </button>
      `;
      
      // Add click handler to close button
      successDiv.querySelector('button').addEventListener('click', () => {
        // Reset the form
        form.reset();
        
        // Show form elements again
        formElements.forEach(el => el.style.display = '');
        
        // Remove success message
        successDiv.remove();
        
        // Hide the form container
        const formContainer = form.closest('#quote-form, #contact-form');
        if (formContainer) {
          formContainer.classList.add('hidden');
        }
      });
      
      // Add to the DOM
      form.appendChild(successDiv);
    }
  });
</script>
